<?php
/**
 * Created by PhpStorm.
 * User: JUST
 * Date: 2022/4/13
 * Time: 16:37
 */

namespace app\mongo;


use app\helpers\DatabaseHelper;
use app\helpers\DateHelper;


class BaseActiveRecord extends \yii\mongodb\ActiveRecord
{

    public function init()
    {
        self::getDb()->setDefaultDatabaseName(\Yii::$app->db->dbName);
        parent::init(); // TODO: Change the autogenerated stub
    }


    /**
     * @return BaseActiveQuery
     * @throws \yii\base\InvalidConfigException
     */
    public static function find()
    {

        return \Yii::createObject(BaseActiveQuery::className(), [get_called_class()]);
    }

    public function beforeValidate()
    {
        $time = time();
        $insert = $this->isNewRecord;
        $isCreatedAt = false;
        $isUpdatedAt = false;
        $isDeletedAt = false;
        $isDelete = false;
        if (isset($this->attributes) && is_array($this->attributes())) {
            foreach ($this->attributes() as $item) {
                $item === 'created_at' ? $isCreatedAt = true : '';
                $item === 'updated_at' ? $isUpdatedAt = true : '';
                $item === 'deleted_at' ? $isDeletedAt = true : '';
                $item === 'is_delete' ? $isDelete = true : '';
            }
        }

        if ($insert === true && $isCreatedAt === true) {
            $this->created_at = $time;
            $this->is_delete = 0;
            $this->created_time = DateHelper::format($time);
        }

        if ($isUpdatedAt === true) {
            $this->updated_at = $time;
        }

        if ($isDelete === true && $isDeletedAt === true) {
            if ((int)$this->is_delete === 1) {
                $this->deleted_at = $time;
            } else {
                $this->deleted_at = 0;
            }
        }

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }
}