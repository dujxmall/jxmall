<?php
/**
 * Created by PhpStorm.
 * User: ganxi
 * Date: 2022/4/4
 * Time: 17:36
 * Note:
 */

namespace app\forms\admin;


use app\core\ApiCode;
use app\helpers\ResponseHelper;
use app\models\Api;
use app\models\BaseModel;

class ApiForm extends BaseModel
{
    public $id;
    public $api_group;
    public $path;
    public $description;
    public $method;
    public $ids;


    public function rules()
    {
        return [
            [['id'], 'integer'],
            [['ids'], 'safe'],
            [['api_group', 'path', 'description', 'method'], 'string']
        ]; // TODO: Change the autogenerated stub
    }


    public function save()
    {

        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }

        $model = Api::getOne($this->id);
        if (!$model) {
            $model = new Api();

        }
        $model->attributes = $this->attributes;

        if (!$model->save()) {
            return $this->responseErrorMsg($model);
        }

        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '保存成功');


    }

    public function delete()
    {
        $model = Api::getOne($this->id);
        if (!$model) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '接口不存在！');
        }
        $model->is_delete = 1;
        if (!$model->save()) {
            return $this->responseErrorMsg($model);
        }

        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '删除成功');
    }

    public function getList()
    {
        $query = Api::find()->andWhere(['is_delete' => 0])->orderBy('id desc');

        $list = $query->orderBy('id desc')->asArray()->all();


        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '', ['apis' => $list]);
    }

    public function deleteByIds()
    {
        if (!Api::updateAll(['is_delete' => 0, 'deleted_at' => time()], ['id' => $this->ids])) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '删除失败');
        }

        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '删除成功');


    }

    public function getInfo()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $model = Api::getOne($this->id);
        if (!$model) {
            return ResponseHelper::send(ApiCode::CODE_FAIL,'接口不存在！');
        }
        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '', ['api' => $model->attributes]);
    }


}