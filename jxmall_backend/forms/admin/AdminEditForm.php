<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-09-10
 * Time: 20:19
 */

namespace app\forms\admin;


use app\core\ApiCode;
use app\models\Admin;
use app\models\AdminAuthority;
use app\models\BaseModel;

class AdminEditForm extends BaseModel
{
    public $id;
    public $username;
    public $password;
    public $name;
    public $admin_type;
    public $mall_count;
    public $is_has_expire;
    public $is_expire;
    public $end_at;
    public $mobile;
    public $avatar;
    public $authority_id;
    public $email;
    public $nickname;
    public $authorityIds;


    public function rules()
    {
        return [
            [['username', 'nickname', 'mobile'], 'required'],
            [['authorityIds'], 'safe'],
            [['id', 'mall_count', 'is_expire', 'is_has_expire'], 'integer'],
            [['username', 'name', 'password', 'mobile', 'end_at', 'avatar', 'authority_id', 'email', 'nickname'], 'string'],
            [['password'], 'string', 'min' => 5, 'max' => 20],
            [['mobile'], 'string', 'min' => 11, 'max' => 20],
            [['mall_count', 'is_has_expire', 'is_expire', 'admin_type'], 'default', 'value' => 0]
        ]; // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return [
            'nickname' => '昵称',
            'mobile' => '手机号'
        ]; // TODO: Change the autogenerated stub
    }

    public function save()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $this->name = $this->nickname;
        if (!$this->id) {
            $admin = Admin::find()->where(['is_delete' => 0])->andWhere(['username' => $this->username])->exists();
            if ($admin) {
                return $this->apiResponse(ApiCode::CODE_FAIL, '该用户名已存在，请更换');
            }
            $admin = Admin::find()->where(['is_delete' => 0])->andWhere(['mobile' => $this->mobile])->exists();
            if ($admin) {
                return $this->apiResponse(ApiCode::CODE_FAIL, '该手机号已存在，请更换');
            }
        }

        $admin = Admin::findOne(['username' => $this->username, 'is_delete' => 0]);
        if ($admin && $admin->admin_type != 0) {
            if ($admin->id != $this->id) {
                return $this->apiResponse(ApiCode::CODE_FAIL, '该用户名称已存在');
            }
        }
        if ($this->id) {
            $admin = Admin::findOne(['id' => $this->id, 'is_delete' => 0]);
            if ($admin) {
                $admin1 = Admin::findOne(['mobile' => $this->mobile, 'is_delete' => 0]);
                if ($admin1 && $admin1->id = !$this->id) {
                    return $this->apiResponse(ApiCode::CODE_FAIL, '该手机号已存在，请更换');
                }
            }
        }
        if (!$admin) {
            $admin = Admin::find()->where(['is_delete' => 0])->andWhere(['or', ['username' => $this->username, 'mobile' => $this->mobile]])->exists();
            if ($admin) {
                return $this->apiResponse(ApiCode::CODE_FAIL, '该用户名或手机号已存在，请更换');
            }
            $admin = new Admin();
        }
        if (!$admin->isNewRecord) {
            if (!$this->password) {
                $this->password = $admin->password;
            }
        }
        $admin->attributes = $this->attributes;
        if ($this->is_has_expire) {
            if (!$this->end_at) {
                return $this->apiResponse(ApiCode::CODE_FAIL, '请选择到期时间');
            }
            $admin->end_at = strtotime($this->end_at);
        }
        $admin->password = \Yii::$app->security->generatePasswordHash($this->password);
        $admin->created_by = \Yii::$app->admin->identity->id;
        if (!$admin->save()) {
            return $this->responseErrorMsg($admin);
        }

        //更新权限

        AdminAuthority::deleteAll(['admin_id' => $admin->id]);

        foreach ($this->authorityIds as $id) {
            $model = new AdminAuthority();
            $model->admin_id = $admin->id;
            $model->authority_id = $id;
            $model->save();
        }


        return $this->apiResponse(ApiCode::CODE_SUCCESS, '保存成功');
    }

}