<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-11-22
 * Time: 13:47
 */

namespace app\forms\admin;


use app\core\ApiCode;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\Plugin;
use yii\httpclient\Client;

class UpdateForm extends BaseModel
{
    public $new_version;
    public function rules()
    {
        return [
            [['new_version'], 'string']
        ]; // TODO: Change the autogenerated stub
    }

    /**
     * @Author: 动力宇宙 ganxiaohao
     * @Date: 2020-11-22
     * @Time: 13:48
     * @Note:检查更新
     */
    public function check()
    {
        $version = file_get_contents(\Yii::$app->basePath . '/version');
        if (!$version) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '版本号不正确！');
        }
        $client = new Client([
            'transport' => 'yii\httpclient\CurlTransport'
        ]);
        try {
            $response = $client->createRequest()
                ->setMethod('get')
                ->setUrl('http://v.dujxmall.com/web/index.php?r=api/we7/mall-check')
                ->setData(['site' => $_SERVER['HTTP_HOST'], 'version' => $version])
                ->send();
        } catch (\Exception $e) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '发生错误');
        }
        $res = SerializeHelper::decode($response->content);
        if ($res['code'] != 0) {
            return $this->apiResponse(ApiCode::CODE_FAIL, $res['msg']);
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '存在更新', ['version' => $res['data']['version'], 'detail' => $res['data']['detail']]);
    }

    public function update()
    {
        if (!$this->new_version) {
            return ['code' => 1, 'msg' => '版本号不存在！'];
        }
        $old_version = file_get_contents(\Yii::$app->basePath . '/version');
        $tempPath = \Yii::$app->runtimePath . '/update/mall';
        if (!is_dir($tempPath)) {
            mkdir($tempPath, 755);
        }
        $fileName = $tempPath . '/update.zip';
        try {
            $client = new Client([
                'transport' => 'yii\httpclient\CurlTransport'
            ]);
            $response = $client->createRequest()
                ->setMethod('GET')
                ->setUrl('http://v.dujxmall.com/web/index.php?r=api/we7/mall')//获取下载链接
                ->setData(['site' => $_SERVER['HTTP_HOST'], 'version' => $this->new_version])
                ->send();//获取下载链接
            $res = SerializeHelper::decode($response->content);
            if ($res['code'] != 0) {
                return $this->apiResponse(ApiCode::CODE_FAIL, $res['msg']);
            }
            $fh = fopen($fileName, 'w');
            $response = $client->createRequest()
                ->setMethod('GET')
                ->setUrl($res['data']['version']['url'])
                ->setOutputFile($fh)
                ->send(); //下载文件
            fclose($fh);
        } catch (\Exception $e) {
            return ['code' => 1, 'msg' => '更新失败：' . $e->getMessage()];
        }
        try {
            if (!$response->isOk) {
                return ['code' => 1, 'msg' => '下载失败'];
            }
            if (!file_exists($fileName)) {
                return ['code' => 1, 'msg' => '下载失败，请重试'];
            }
            $zip = new \ZipArchive();
            $zip->open($fileName);
            $zip->extractTo(\Yii::$app->basePath);
            $zip->close();
            unlink($fileName);
        } catch (\Exception $exception) {
            try {
                $zip = new \ZipArchive();
                $zip->open($fileName);
                $zip->extractTo(\Yii::$app->basePath);
                $zip->close();
                unlink($fileName);
            } catch (\Exception $e) {
                return ['code' => 1, 'msg' => '安装失败,请重试'];
            }
        }
        $newVersion = file_get_contents(\Yii::$app->basePath . '/version');
        if ($newVersion&&$old_version!=$newVersion) { //新的版本
            $sqlFile = \Yii::$app->basePath . '/sql/update/' . $newVersion . '.sql';
            if (file_exists($sqlFile)) {
                $sqlData = file_get_contents($sqlFile);
                \Yii::$app->db->createCommand($sqlData)->execute();
                unlink($sqlFile);
            }
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '更新完成');
    }

}