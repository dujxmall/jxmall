<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-29
 * Time: 0:47
 */

namespace app\forms\admin;


use app\core\ApiCode;
use app\helpers\CacheHelper;
use app\helpers\IconHelper;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\plugins\Plugin;
use function Sodium\compare;

class PluginListForm extends BaseModel
{
    public $keyword;
    public $limit;
    public $page;


    public function rules()
    {
        return [
            [['page', 'limit'], 'integer'],
            [['limit'], 'default', 'value' => 10],
            [['keyword'], 'string']

        ]; // TODO: Change the autogenerated stub
    }

    public function getList()
    {
        $list = \Yii::$app->plugin->scanPluginList(); //只获取本地插件
        $newList = [];
        foreach ($list as $item1) {
            $plugin = new $item1;
            $item['is_local'] = 1;
            $item['status'] = 0;
            $item['is_update'] = 0;
            $item['name'] = $plugin->getName();
            $item['label'] = $plugin->getLabel();
            $item['local_version'] = $plugin->getVersion();
            $item['is_local'] = 1;
            if ($plugin) {
                $item['logo'] = $plugin->getLogo();
                $item['dsc'] = $plugin->getDsc();
                if ($plugin->getVersion() != $item['version']) {
                    $item['is_update'] = 0;//有更新
                }
                $item['local_version'] = $plugin->getVersion();
            }
            $exist = \app\models\Plugin::find()->where(['name' => $plugin->getName(), 'is_delete' => 0])->exists();
            if ($exist) {
                $item['status'] = 1;
            }
            if ($item['type'] == 0) {
                $item['group_name'] = '分润类';
            }
            if ($item['type'] == 2) {
                $item['group_name'] = '营销类';
            }
            if ($item['type'] == 3) {
                $item['group_name'] = '工具类';
            }
            $newList[] = $item;
        }
        unset($item);
        $list = $newList;
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list]);
    }

}