<?php
/**
 * Created by PhpStorm.
 * User: ganxi
 * Date: 2022/3/24
 * Time: 17:59
 * Note:
 */

namespace app\forms\api\login;


use app\core\ApiCode;
use app\helpers\CacheHelper;
use app\helpers\OptionHelper;
use app\helpers\ResponseHelper;
use app\models\BaseModel;
use app\models\User;
use app\models\UserInfo;
use EasyWeChat\Kernel\Exceptions\InvalidArgumentException;
use Overtrue\EasySms\EasySms;
use Overtrue\EasySms\Exceptions\NoGatewayAvailableException;

class MobileSignInForm extends BaseModel
{

    public $avatarUrl;
    public $nickName;
    public $openid;
    public $mobile;
    public $password;
    public $code;

    public function rules()
    {
        return [
            [['avatarUrl', 'nickName', 'openid', 'mobile', 'password', 'code'], 'string']
        ]; // TODO: Change the autogenerated stub
    }

    public function signIn()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $user = User::findOne(['mobile' => $this->mobile, 'mall_id' => $this->mall_id, 'is_delete' => 0]);
        if ($user) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '该手机号也被注册，请换个手机号试试');
        }
        //验证手机号
        $code = CacheHelper::get('sms_code' . $this->mobile);
        if ($code != $this->code) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '验证码不正确!');
        }
        $t = \Yii::$app->db->beginTransaction();
        $user = new User();
        $user->mall_id = $this->mall_id;
        $user->mobile = $this->mobile;
        $user->avatar_url = $this->avatarUrl;
        $user->platform = User::PLATFORM_MOBILE;
        $user->nickname = $this->nickName;
        $user->password = \Yii::$app->security->generatePasswordHash($this->password);
        $user->access_token = \Yii::$app->security->generateRandomString();
        $user->auth_key = \Yii::$app->security->generateRandomString();
        $user->openid = $this->openid;
        if (\Yii::$app->wechat->getIsWechat()) {
            $user_detail = \Yii::$app->wechat->app->user->get($user->openid);
            if ($user_detail && $user_detail['subscribe']) {
                $user->is_subscribe = 1;
            }
        }
        if (!$user->save()) {
            $t->rollBack();
            return $this->responseErrorMsg($user);
        }
        $user_info = new UserInfo();
        $user_info->mall_id = $user->mall_id;
        $user_info->openid = $this->mobile;
        $user_info->user_id = $user->id;
        $user_info->platform = UserInfo::PLATFORM_MOBILE;
        if (!$user_info->save()) {
            $t->rollBack();
            return $this->responseErrorMsg($user_info);
        }
        $t->commit();
        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '注册成功，现在去登录吧');
    }


}