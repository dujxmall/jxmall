<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-11
 * Time: 9:38
 */

namespace app\forms\api\cart;


use app\core\ApiCode;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\Cart;
use app\models\Goods;
use app\models\GoodsAttr;

class CartListForm extends BaseModel
{

    public $page;
    public $limit;
    public $status;
    public $keyword;


    public function rules()
    {
        return [
            [['page', 'limit'], 'integer'],
            [['keyword'], 'string'],
            [['limit'], 'default', 'value' => 10]
        ]; // TODO: Change the autogenerated stub
    }


    public function getList()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $query = Cart::find()
            ->alias('c')
            ->leftJoin(['g' => Goods::tableName()], 'g.id=c.goods_id')
            ->where(['c.mall_id' => \Yii::$app->mall->id, 'c.is_delete' => 0, 'c.user_id' => \Yii::$app->user->identity->id]);
        if ($this->keyword) {
            $query->andWhere(['like', 'g.name', $this->keyword]);
        }
        $list = $query->page($pagination, $this->limit, $this->page)->orderBy('created_at DESC')->select('c.*,g.cover_pic,g.name,g.price,g.is_attr,g.mch_id')->asArray()->all();
        foreach ($list as &$item) {
            $item['is_valid'] = 1;
            $item['selected'] = false;
            $item['checked'] = false;
            $item['num'] = intval($item['num']);
            if ($item['is_attr']) {
                $attr = GoodsAttr::findOne(['is_delete' => 0, 'goods_id' => $item['goods_id'], 'id' => $item['goods_attr_id']]);
                if ($attr) {
                    $item['attr'] = SerializeHelper::decode($attr->attr_list);
                    $item['price'] = $attr->price;
                } else {
                    $item['is_valid'] = 0;
                }
            }
        }
        unset($item);
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list, 'pagination' => $pagination]);
    }
}