<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-09-17
 * Time: 16:07
 */

namespace app\forms\api\user;

use app\core\ApiCode;
use app\models\Address;
use app\models\BaseModel;
use app\models\UserAddress;
use function Sodium\add;

class UserAddressForm extends BaseModel
{
    public $province_code;
    public $province_name;
    public $city_code;
    public $city_name;
    public $county_code;
    public $county_name;
    public $town_code;
    public $town_name;
    public $is_default;
    public $mobile;
    public $id;
    public $area;
    public $address;
    public $detail;
    public $name;

    public function rules()
    {
        return [
            [['is_default', 'id'], 'integer'],
            [['mobile'], 'string', 'max' => 11],
            [['province_code', 'city_code', 'county_code', 'town_code'], 'string', 'max' => 20],
            [['province_name', 'city_name', 'county_name', 'town_name', 'name'], 'string', 'max' => 45],
            [['area', 'address', 'detail'], 'string', 'max' => 64],
            [['is_default'], 'default', 'value' => 0]
        ]; // TODO: Change the autogenerated stub
    }


    public function save()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $address = null;
        if ($this->id) {
            $address = UserAddress::findOne(['is_delete' => 0, 'id' => $this->id, 'user_id' => \Yii::$app->user->identity->id]);
        }
        if (!$address) {
            $address = new UserAddress();
            $address->user_id = \Yii::$app->user->identity->id;
            $address->mall_id = \Yii::$app->mall->id;
        }
        $address->attributes = $this->attributes;


        if (!$address->save()) {
            return $this->responseErrorMsg($address);
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '保存成功');
    }

    public function delete()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $address = UserAddress::findOne(['is_delete' => 0, 'id' => $this->id, 'user_id' => \Yii::$app->user->identity->id]);
        if (!$address) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '该记录不存在或已被删除');
        }
        $address->is_delete = 1;
        if (!$address->save()) {
            return $this->responseErrorMsg($address);
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '删除成功');
    }

    public function search()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $address = UserAddress::findOne(['is_delete' => 0, 'id' => $this->id, 'user_id' => \Yii::$app->user->identity->id]);
        if (!$address) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '该记录不存在或已被删除');
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['address' => $address]);
    }


    public function getList()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $list = UserAddress::find()->where(['is_delete' => 0, 'user_id' => \Yii::$app->user->identity->id])->asArray()->all();
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list]);
    }


}