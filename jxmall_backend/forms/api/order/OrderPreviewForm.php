<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-11
 * Time: 21:24
 */

namespace app\forms\api\order;


use app\core\ApiCode;
use app\helpers\CacheHelper;
use app\helpers\ResponseHelper;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\CommonOrder;
use app\models\CommonOrderDetail;
use app\models\Coupon;
use app\models\FreightPrice;
use app\models\FreightTpl;
use app\models\Goods;
use app\models\GoodsAttr;
use app\models\GoodsCoupon;
use app\models\User;
use app\models\UserAddress;
use app\models\UserCoupon;
use function Couchbase\defaultDecoder;
use Symfony\Component\HttpFoundation\AcceptHeader;
use yii\helpers\Json;

class OrderPreviewForm extends BaseModel
{
    public $order_data;
    public $address;
    public $address_id;
    public $user_coupon_id;
    public $use_coupon_goods_id;
    public $is_use_integral;

    public function rules()
    {
        return [
            [['address_id', 'user_coupon_id', 'use_coupon_goods_id', 'is_use_integral'], 'integer'],
            [['order_data'], 'safe']
        ]; // TODO: Change the autogenerated stub
    }

    public function search()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $default_address = UserAddress::findOne(['is_default' => 1, 'user_id' => \Yii::$app->user->identity->id, 'is_delete' => 0]);
        $this->address = $default_address;
        if ($this->address_id) {
            $address = UserAddress::findOne(['id' => $this->address_id, 'user_id' => \Yii::$app->user->identity->id, 'is_delete' => 0]);
            if ($address) {
                $this->address = $address;
            }
        }
        $this->order_data = Json::decode($this->order_data);
        $goods_total_price = 0.00;
        $origin_goods_total_price = 0.00;//未减掉的总商品费用
        $express_price = 0;
        $coupon_list = [];
        $coupon_ids = [];
        $goods_ids = [];
        $cut_price = 0;
        $user_integral = \Yii::$app->user->identity->integral;
        $integral_cut_price = 0;
        $total_use_integral = 0;
        foreach ($this->order_data as &$mch) {
            $freight_list = [];
            $mch['is_use_integral'] = 0;
            $mch['use_integral'] = 0;
            $goods_integral_cut_price = 0;
            foreach ($mch['goods_list'] as &$item) {
                $goods = Goods::findOne(['id' => $item['goods_id'], 'status' => 1]);
                if (!$goods) {
                    return $this->apiResponse(ApiCode::CODE_FAIL, '包含不存在或已下架的商品！');
                }
                $goods->price = $goods->getLevelPrice(\Yii::$app->user->identity->level_id);
                if ($goods->is_limit) {
                    $limit_num = $goods->limit_num;
                    $num = CommonOrder::find()
                        ->alias('o')
                        ->innerJoin(['d' => CommonOrderDetail::tableName()], 'o.order_no=d.common_order_no')
                        ->andWhere(['o.user_id' => \Yii::$app->user->identity->id, 'o.is_delete' => 0])
                        ->andWhere(['d.goods_id' => $goods->id])->andWhere(['o.is_pay' => 1])->sum('d.num');
                    $num = $num ?? 0;
                    $num += $item['num'];
                    if ($num > $limit_num) {
                        return ResponseHelper::send(ApiCode::CODE_FAIL, "商品：{$goods->name},超出了购买限制");
                    }
                }

                array($goods_ids, $goods->id);
                $item['name'] = $goods->name;
                $item['cover_pic'] = $goods->cover_pic;
                if ($item['goods_attr_id']) {
                    $goods_attr = GoodsAttr::findOne(['is_delete' => 0, 'id' => $item['goods_attr_id'], 'goods_id' => $item['goods_id']]);
                    if (!$goods_attr) {
                        return $this->apiResponse(ApiCode::CODE_FAIL, '包含不存在的商品商品规格！');
                    }
                    $item['price'] = $goods_attr->price;
                    $item['total_price'] = $goods_attr->price * $item['num'];
                    $item['attr_list'] = SerializeHelper::decode($goods_attr->attr_list);
                } else {
                    $item['price'] = $goods->price;
                    $item['total_price'] = $goods->price * $item['num'];
                }

                $goods_total_price += $item['total_price'];
                $origin_goods_total_price += $item['total_price'];
                /**
                 * 优惠券
                 */
                if ($this->use_coupon_goods_id == $goods->id) {
                    $user_coupon = UserCoupon::findOne(['is_delete' => 0, 'status' => 0, 'id' => $this->user_coupon_id, 'user_id' => \Yii::$app->user->identity->id]);
                    if ($user_coupon) {
                        if ($user_coupon->type == 0) {
                            if ($user_coupon->price <= $item['total_price']) {
                                $cut_price += $user_coupon->discount;
                                $goods_total_price -= $user_coupon->discount;
                            }
                        }
                        if ($user_coupon->type == 1) {
                            if ($user_coupon->price <= $item['total_price']) {
                                $cut_price += (1 - $user_coupon->discount / 10) * $item['total_price'];
                                $goods_total_price -= (1 - $user_coupon->discount / 10) * $item['total_price'];
                            }
                        }
                    }
                }

                $cids = GoodsCoupon::find()
                    ->where(['mall_id' => $this->mall_id, 'is_delete' => 0, 'goods_id' => $goods->id])
                    ->select('coupon_id')
                    ->column();
                $query = UserCoupon::find()->where(['user_id' => \Yii::$app->user->identity->id, 'status' => 0, 'is_delete' => 0])
                    ->andWhere(['coupon_id' => $cids])
                    ->andWhere(['<', 'price', $item['total_price']]);
                if (count($coupon_ids)) {
                    $query->andWhere(['!=', 'coupon_id', $coupon_ids]);
                }
                $query2 = clone $query;
                $ids = $query2->select('coupon_id')->column();
                $coupon_ids = array_merge($coupon_ids, $ids);
                $list = $query->asArray()->all();

                foreach ($list as &$coupon) {
                    $coupon['goods_id'] = $goods->id;
                }
                unset($coupon);
                $coupon_list = array_merge($coupon_list, $list);

                /**
                 * 优惠券结束
                 */

                if ($goods->express_type != 0) {
                    $item['freight_price'] = $goods->freight_price;
                    $item['freight_id'] = $goods->freight_id;
                    $item['express_type'] = $goods->express_type;
                    array_push($freight_list, $item);
                }
                /**
                 * 积分开始
                 */


                $item['integral_price'] = 0;
                $item['use_integral'] = 0;
                if ($goods->is_integral) {//开启积分抵扣
                    if ($goods->price >= $goods->integral_price) {
                        if ($user_integral >= $goods->use_integral * $item['num']) {
                            $user_integral -= $goods->use_integral * $item['num'];
                            $total_use_integral += $goods->use_integral * $item['num'];
                            $integral_cut_price += $goods->integral_price * $item['num'];
                            if ($this->is_use_integral) {
                                $item['total_price'] -= $goods->integral_price * $item['num'];
                                $goods_total_price -= $goods->integral_price * $item['num'];
                                $item['use_integral'] = $goods->use_integral * $item['num'];
                                $item['integral_price'] = $goods->integral_price * $item['num'];
                                $mch['is_use_integral'] = 1;
                                $mch['use_integral'] += $item['use_integral'];
                                $goods_integral_cut_price += $item['integral_price'];
                            }
                        } else {
                            $integral_goods_num = 0;
                            if ($goods->use_integral > 0) {
                                $integral_goods_num = intval($user_integral / $goods->use_integral);
                            }
                            if ($integral_goods_num) {
                                $total_use_integral += $goods->use_integral * $integral_goods_num;
                                $user_integral -= $goods->use_integral * $integral_goods_num;
                                $integral_cut_price += $goods->integral_price * $integral_goods_num;
                                if ($this->is_use_integral) {
                                    $item['total_price'] -= $integral_cut_price;
                                    $goods_total_price -= $integral_cut_price;
                                    $item['use_integral'] = $goods->use_integral * $integral_goods_num;
                                    $item['integral_price'] = $integral_cut_price;
                                    $mch['is_use_integral'] = 1;
                                    $mch['use_integral'] += $item['use_integral'];
                                    $goods_integral_cut_price += $item['integral_price'];
                                }
                            }
                        }
                    }
                }
                if ($user_integral == 0) {
                    $item['is_integral'] = 0;
                }
                /**
                 * 积分结束
                 */
            }
            $mch['origin_total_goods_price'] = $origin_goods_total_price;
            $freight_price = $this->getFreightPrice($freight_list);
            $mch['express_price'] = $freight_price;
            $mch['integral_cut_price'] = $goods_integral_cut_price;
            $express_price += $freight_price;
            $mch['remarks'] = '';
            unset($item);
        }
        unset($mch);
        /**
         *优惠券开始
         */
        if ($this->user_coupon_id && $this->use_coupon_goods_id == 0) {
            $user_coupon = UserCoupon::findOne(['is_delete' => 0, 'status' => 0, 'id' => $this->user_coupon_id, 'user_id' => \Yii::$app->user->identity->id]);
            if ($user_coupon) {
                if ($user_coupon->type == 0) {
                    if ($user_coupon->price <= $goods_total_price) {
                        $cut_price += $user_coupon->discount;
                        $goods_total_price -= $user_coupon->discount;
                    }
                }
                if ($user_coupon->type == 1) {
                    if ($user_coupon->price <= $goods_total_price) {
                        $cut_price += (1 - $user_coupon->discount / 10) * $goods_total_price;
                        $goods_total_price -= (1 - $user_coupon->discount / 10) * $goods_total_price;
                    }
                }
            }
        }


        $goods_total_price = $goods_total_price < 0 ? 0 : $goods_total_price;
        $total_price = $goods_total_price + floatval($express_price);
        $goods_total_price = number_format($goods_total_price, 2);
        $total_price = number_format($total_price, 2);
        $user_coupon_list = UserCoupon::find()->where(['user_id' => \Yii::$app->user->identity->id, 'is_delete' => 0, 'status' => 0, 'is_goods_limit' => 0])->andWhere(['<=', 'price', $goods_total_price])->asArray()->all();
        foreach ($user_coupon_list as &$coupon) {
            $coupon['goods_id'] = 0;
        }
        unset($coupon);
        $user_coupon_list = array_merge($coupon_list, $user_coupon_list);
        foreach ($user_coupon_list as &$item) {
            $item['date'] = '使用日期:' . date('Y-m-d', $item['start_at']) . '~' . date('Y-m-d', $item['end_at']);
        }
        /**
         * 优惠券结束
         */
        $data = [
            'mch_list' => $this->order_data,
            'goods_total_price' => $goods_total_price,
            'default_address' => $this->address,
            'total_price' => $total_price,
            'express_price' => $express_price,
            'coupon_list' => $user_coupon_list,
            'coupon_cut_price' => $cut_price,
            'user_coupon_id' => $this->user_coupon_id,
            'use_coupon_goods_id' => $this->use_coupon_goods_id,
            'user_integral' => \Yii::$app->user->identity->integral,
            'integral_cut_price' => $integral_cut_price,
            'total_use_integral' => $total_use_integral,
        ];
        CacheHelper::set("order_preview_uid_" . \Yii::$app->user->identity->getId(), SerializeHelper::encode($data), 300);//缓存三分钟
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', $data);
    }


    /**
     * @Author: 动力宇宙 ganxiaohao
     * @Date: 2020-10-21
     * @Time: 23:56
     * @Note:计算运费
     */
    public function getFreightPrice($goods_list = [])
    {
        $express_price = 0;
        $freight_tpl_list = [];//使用运费模板
        $tpl_goods_list = [];
        foreach ($goods_list as $item) {
            if ($item['express_type'] == 1) {
                $express_price += $item['freight_price'] * $item['num'];
            }
            if ($item['express_type'] == 2) {
                $flag = false;
                foreach ($freight_tpl_list as &$tpl) {
                    foreach ($tpl as $goods_item) {
                        if ($goods_item['freight_id'] == $item['freight_id']) {
                            array_push($tpl, $item);
                            $flag = true;
                            break 2;
                        }
                    }
                }

                array_push($tpl_goods_list, $item);
                if (!$flag) {
                    array_push($freight_tpl_list, [$item]);
                }
            }
        }
        $freight_list = [];
        foreach ($freight_tpl_list as $item) {
            $freight = FreightTpl::findOne(['is_delete' => 0, 'id' => $item[0]['freight_id'], 'enabled' => 1]);
            array_push($freight_list, $freight);  //首先拿到每一组的运费模板
        }
        //从大到小排序
        $len = count($freight_list);
        for ($i = 0; $i < $len - 1; $i++) {
            for ($j = 0; $j < $len - $i - 1; $j++) {
                $freight_price1 = FreightPrice::find()->where(['tpl_id' => $freight_list[$j]['id']])->andWhere(['or', ['like', 'send_codes', '"' . $this->address->province_code . '"'], ['like', 'send_codes', '"' . $this->address->city_code . '"'], ['like', 'send_codes', '"' . $this->address->county_code . '"']])->one();
                if (!$freight_price1) {
                    $freight_price1 = FreightPrice::find()->where(['is_union' => 1, 'tpl_id' => $freight_list[$j]['id']])->one();
                }
                $freight_price2 = FreightPrice::find()->where(['tpl_id' => $freight_list[$j + 1]['id']])->andWhere(['or', ['like', 'send_codes', '"' . $this->address->province_code . '"'], ['like', 'send_codes', '"' . $this->address->city_code . '"'], ['like', 'send_codes', '"' . $this->address->county_code . '"']])->one();
                if (!$freight_price2) {
                    $freight_price2 = FreightPrice::find()->where(['is_union' => 1, 'tpl_id' => $freight_list[$j + 1]['id']])->one();
                }
                if (!$freight_price1 || !$freight_price2) {
                    return 0;
                }
                if ($freight_price1['first_price'] < $freight_price2['first_price']) {
                    $tem = $freight_list[$j];
                    $freight_list[$j] = $freight_list[$j + 1];
                    $freight_list[$j + 1] = $tem;
                }
            }
        }
        $freight_price = FreightPrice::find()->where(['tpl_id' => $freight_list[0]['id']])->andWhere(['or', ['like', 'send_codes', '"' . $this->address->province_code . '"'], ['like', 'send_codes', '"' . $this->address->city_code . '"'], ['like', 'send_codes', '"' . $this->address->county_code . '"']])->one();
        if (!$freight_price) {
            $freight_price = FreightPrice::find()->where(['is_union' => 1, 'tpl_id' => $freight_list[0]['id']])->one();
        }
        $first_price = $freight_price['first_price'];//首件的费用   其他都被当做续件
        $other_price = 0;
        $has_first = false;
        foreach ($tpl_goods_list as $i => $item) {
            $price = FreightPrice::find()->where(['tpl_id' => $item['freight_id']])->andWhere(['or', ['like', 'send_codes', '"' . $this->address->province_code . '"'], ['like', 'send_codes', '"' . $this->address->city_code . '"'], ['like', 'send_codes', '"' . $this->address->county_code . '"']])->one();
            if (!$price) {
                $price = FreightPrice::find()->where(['is_union' => 1, 'tpl_id' => $item['freight_id']])->one();
            }
            if ($item['freight_id'] == $freight_price['tpl_id']) {
                if (!$has_first) {
                    $has_first = true;
                    $num = $item['num'] - $freight_price['first_num'];
                    if ($num > 0) {
                        $num = $num / $freight_price['other_num'];
                        $last = $num % $freight_price['other_num'];
                        if ($last != 0) {
                            $other_price += $freight_price['other_price'] * ($num + 1);
                        } else {
                            $other_price += $freight_price['other_price'] * $num;
                        }
                    }
                } else {
                    $num = $item['num'] / $freight_price['other_num'];
                    $last = $item['num'] % $freight_price['other_num'];
                    if ($last != 0) {
                        $other_price += $price['other_price'] * ($num + 1);
                    } else {
                        $other_price += $price['other_price'] * $num;
                    }
                }
            } else {
                $num = $item['num'] / $price['other_num'];
                $last = $item['num'] % $price['other_num'];
                if ($last != 0) {
                    $other_price += $price['other_price'] * ($num + 1);
                } else {
                    $other_price += $price['other_price'] * $num;
                }
            }
        }
        $total_price = $first_price + $other_price;
        $express_price += $total_price;
        return $express_price;
    }

}
