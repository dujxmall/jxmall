<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-11
 * Time: 11:24
 */

namespace app\forms\api\goods;


use app\core\ApiCode;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\Goods;
use app\models\GoodsComment;
use app\models\GoodsFavorite;
use app\models\GoodsFootmark;
use app\models\User;
use function foo\func;

class GoodsForm extends BaseModel
{
    public $id;


    public function rules()
    {
        return [
            [['id'], 'integer']
        ]; // TODO: Change the autogenerated stub
    }


    public function search()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $goods = Goods::findOne(['is_delete' => 0, 'id' => $this->id, 'mall_id' => \Yii::$app->mall->id]);
        if (!$goods) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '商品不存在或已被删除!');
        }
        if ($goods->status == 0) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '商品已下架!');
        }
        $goods_info = $goods->info;

        if (!\Yii::$app->user->isGuest) {
            $level = \Yii::$app->user->identity->level;
        } else {
            $level = -1;
        }
        $goods->price=$goods->getLevelPrice($level);
        if ($goods_info['permission']) {
            $permission = SerializeHelper::decode($goods_info['permission']);
            if ($permission) {
                if ($permission['explode_is_level']) {
                    if (!in_array($level, $permission['explode_levels'])) {
                        return $this->apiResponse(ApiCode::CODE_FAIL, '商品不存在!');
                    }
                }
            }
        }


        $goods_info['pic_list'] = SerializeHelper::decode($goods_info['pic_list']);
        $goods_footmark = GoodsFootmark::findOne(['user_id' => \Yii::$app->user->identity->id, 'goods_id' => $this->id, 'is_delete' => 0, 'mall_id' => \Yii::$app->mall->id]);
        if (!$goods_footmark) {
            $goods_footmark = new GoodsFootmark();
            $goods_footmark->mall_id = \Yii::$app->mall->id;
            $goods_footmark->goods_id = $this->id;
            $goods_footmark->user_id = \Yii::$app->user->identity->id;
        } else {
            $goods_footmark->updated_at = time();
        }
        $goods_footmark->save();


        $attr_list = [];
        if ($goods->is_attr) {
            $attr_group_list = $goods->getAttrGroupList();
            foreach ($attr_group_list as &$item) {
                $item['attr_list'] = SerializeHelper::decode($item['attr_list']);
            }
            $attr_list = $goods->getAttrList();
            foreach ($attr_list as &$item) {
                $item['attr_list'] = SerializeHelper::decode($item['attr_list']);
            }
        } else {
            $attr_group_list = [['attr_group_name' => '规格', 'attr_list' => [["attr_name" => '默认']]]];
        }
        $is_favorite = 0;
        if (!\Yii::$app->user->isGuest) {
            $favorite = GoodsFavorite::findOne(['user_id' => \Yii::$app->user->identity->id, 'goods_id' => $goods->id]);
            if ($favorite && $favorite->is_delete == 0) {
                $is_favorite = 1;
            }
        }
        $comment = GoodsComment::find()->alias('c')->andWhere(['c.goods_id' => $goods->id, 'c.is_delete' => 0])->leftJoin(['u' => User::tableName()], 'u.id=c.user_id')
            ->select('c.*,u.nickname,u.avatar_url')
            ->orderBy('c.created_at DESC')
            ->asArray()->one();
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['goods' => $goods, 'comment' => $comment, 'is_favorite' => $is_favorite, 'info' => $goods_info, 'attr_list' => $attr_list, 'attr_group_list' => $attr_group_list]);
    }

}
