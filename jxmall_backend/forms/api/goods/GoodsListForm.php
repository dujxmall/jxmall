<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-11
 * Time: 9:38
 */

namespace app\forms\api\goods;


use app\core\ApiCode;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\Cat;
use app\models\Goods;
use app\models\GoodsCat;
use app\models\GoodsInfo;
use yii\helpers\Json;

class GoodsListForm extends BaseModel
{

    public $page;
    public $limit;
    public $status;
    public $keyword;
    public $is_recommend;
    public $cat_id;

    public function rules()
    {
        return [
            [['page', 'limit', 'is_recommend', 'cat_id'], 'integer'],
            [['keyword'], 'string'],
            [['limit'], 'default', 'value' => 10]
        ]; // TODO: Change the autogenerated stub
    }

    public function getList()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }

        $query = Goods::find()
            ->where(['mall_id' => \Yii::$app->mall->id, 'is_delete' => 0, 'status' => 1]);
        if ($this->cat_id) {
            $cids = [$this->cat_id];
            $cat = Cat::findOne(['id' => $this->cat_id, 'is_delete' => 0]);
            if ($cat->type == 0) {
                $cids1 = Cat::find()->where(['is_delete' => 0])->andWhere(['parent_id' => $this->cat_id])->select('id')->column();
                if ($cids1) {
                    $cids2 = Cat::find()->where(['is_delete' => 0])->andWhere(['parent_id' => $cids1])->select('id')->column();
                    if ($cids2) {
                        $cids = array_merge($cids, $cids1, $cids2);
                    } else {
                        $cids = array_merge($cids, $cids1);
                    }
                }
            }
            if ($cat->type == 1) {
                $cids1 = Cat::find()->where(['is_delete' => 0])->andWhere(['parent_id' => $this->cat_id])->select('id')->column();
                $cids = array_merge($cids, $cids1);
            }
            $gids = GoodsCat::find()->where(['cat_id' => $cids])->select('goods_id')->column();
            $query->andWhere(['id' => $gids]);
        }


        if ($this->is_recommend) {
            $query->andWhere(['is_recommend' => 1]);
        }


        if ($this->keyword) {
            $query->andWhere(['like', 'name', $this->keyword]);
        }


        $list = $query->page($pagination, $this->limit, $this->page)->orderBy('created_at DESC')->asArray()->all();

        //商品权限

        if (!\Yii::$app->user->isGuest) {  //商品浏览权限
            $level = \Yii::$app->user->identity->level;
        } else {
            $level = -1;
        }
        $newList = [];

        foreach ($list as $goods) {
            $goodsInfo = GoodsInfo::findOne(['goods_id' => $goods['id']]);
            if ($goodsInfo) {


                if (!$goodsInfo->permission) {
                    $newList[] = $goods;
                } else {
                    $permission = Json::decode($goodsInfo->permission);
                    if ($permission) {
                        if ($permission['explode_is_level']) {
                            $permission['explode_levels'] = $permission['explode_levels'] ?? [];
                            if (in_array($level, $permission['explode_levels'])) {
                                $newList[] = $goods;
                            }
                        } else {
                            $newList[] = $goods;
                        }
                    }
                }
            }
        }
        $list = $newList;
        unset($item);

        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list, 'pagination' => $pagination]);

    }
}