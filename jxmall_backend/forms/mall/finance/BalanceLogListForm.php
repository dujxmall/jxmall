<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-11-02
 * Time: 13:30
 */

namespace app\forms\mall\finance;


use app\core\ApiCode;
use app\models\BalanceLog;
use app\models\BaseModel;
use app\models\PriceLog;
use app\models\User;

class BalanceLogListForm extends BaseModel
{
    public $page;
    public $limit;
    public $keyword;
    public $user_id;
    public $nickname;
    public $is_export;
    public $search_date;

    public function rules()
    {
        return [
            [['search_date'], 'safe'],
            [['page', 'limit', 'is_export', 'user_id'], 'integer'],
            [['keyword', 'nickname'], 'string'],
            [['limit'], 'default', 'value' => 10]
        ]; // TODO: Change the autogenerated stub
    }


    public function getList()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }

        $query = BalanceLog::find()
            ->alias('l')
            ->leftJoin(['u' => User::tableName()], 'u.id=l.user_id')
            ->andWhere(['l.is_delete' => 0, 'u.is_delete' => 0]);
        if ($this->nickname) {
            $query->andWhere(['like', 'u.nickname', $this->nickname]);
        }
        if ($this->user_id) {
            $query->andWhere(['l.user_id' => $this->user_id]);
        }
        if ($this->keyword) {
            $query->andWhere(['like', 'l.content', $this->keyword]);
        }
        if ($this->search_date) {
            $start_at = strtotime($this->search_date[0]);
            $end_at = strtotime($this->search_date[1]);
            $query->andWhere(['>=', 'l.created_at', $start_at]);
            $query->andWhere(['<=', 'l.created_at', $end_at]);
        }

        $list = $query->page($pagination, $this->limit, $this->page)
            ->select('u.nickname,u.avatar_url,l.*')
            ->orderBy('l.created_at desc')
            ->asArray()->all();
        foreach ($list as &$item) {
            $item['created_at'] = date('Y-m-d H:i:s', $item['created_at']);
        }
        unset($item);
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list, 'pagination' => $pagination]);

    }

}
