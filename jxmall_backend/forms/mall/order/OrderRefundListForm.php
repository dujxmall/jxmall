<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-18
 * Time: 9:51
 */

namespace app\forms\mall\order;


use app\core\ApiCode;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\CommonOrderDetail;
use app\models\Goods;
use app\models\Order;
use app\models\OrderRefund;
use app\models\User;
use yii\helpers\Json;

class OrderRefundListForm extends BaseModel
{
    public $page;
    public $limit;
    public $status;
    public $start_at;
    public $end_at;

    public $keyword;


    public function rules()
    {
        return [
            [['page', 'limit', 'status'], 'integer'],
            [['limit'], 'default', 'value' => 10],
            [['start_at', 'end_at', 'keyword'], 'string']
        ]; // TODO: Change the autogenerated stub
    }


    public function getList()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $query = OrderRefund::find()->alias('r')
            ->leftJoin(['o' => Order::tableName()], 'o.id=r.order_id')
            ->leftJoin(['u' => User::tableName()], 'u.id=r.user_id')
            ->leftJoin(['g' => Goods::tableName()], 'g.id=r.goods_id')
            ->leftJoin(['od' => CommonOrderDetail::tableName()], 'od.id=r.order_detail_id')
            ->where(['r.mall_id' => \Yii::$app->mall->id, 'r.is_delete' => 0]);
        if ($this->status == 0) {
            $query->andWhere(['r.status' => 0]);
        }
        if ($this->status == 1) {
            $query->andWhere(['r.status' => 1]);
        }
        if ($this->status == 2) {
            $query->andWhere(['r.status' => 2]);
        }
        if ($this->start_at) {
            $this->start_at = strtotime($this->start_at);
            $this->end_at = strtotime($this->end_at);
            $query->andWhere(['>', 'r.created_at', $this->start_at]);
            $query->andWhere(['<', 'r.created_at', $this->end_at]);
        }

        if ($this->keyword) {
            $query->andWhere(['like', 'u.nickname', $this->keyword]);
        }
        $list = $query->page($pagination, $this->limit, $this->page)
            ->orderBy('r.created_at DESC')
            ->select('g.cover_pic,g.name as goods_name,u.nickname,u.avatar_url,r.*,o.order_no as o_order_no,o.address,o.mobile,o.name,od.attr,od.num')
            ->asArray()->all();
        foreach ($list as &$item) {
            $item['attr'] = SerializeHelper::decode($item['attr']);
            $item['created_at'] = date('Y-m-d H:i:s', $item['created_at']);

            try {
                if ($item['pic_list']) {
                    $item['pic_list'] = Json::decode($item['pic_list']);
                }else{
                    $item['pic_list'] = [];
                }
            } catch (\Exception $e) {
                $item['pic_list'] = [];
                \Yii::warning($e->getMessage());
            }
        }
        unset($item);
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list, 'pagination' => $pagination]);
    }

}
