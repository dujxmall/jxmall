<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-29
 * Time: 13:26
 */

namespace app\forms\mall\plugin;

use app\core\ApiCode;
use app\helpers\ServerHelper;
use app\models\BaseModel;
use app\models\MallPlugin;
use app\models\Menu;
use app\models\Plugin;


class PluginListForm extends BaseModel
{
    public $keyword;

    public function rules()
    {
        return [
            [['keyword'], 'string'],

        ]; // TODO: Change the autogenerated stub
    }

    public function getList()
    {
        $query = MallPlugin::find()->alias('m')
            ->innerJoin(['p' => Plugin::tableName()], 'm.plugin=p.name');
        $query->andFilterWhere(['like', 'p.label', $this->keyword]);
        $list = $query->andWhere(['m.mall_id' => $this->mall_id, 'm.is_delete' => 0, 'p.is_delete' => 0])->select('p.*')->asArray()->all();
        foreach ($list as &$item) {
            //获取第一个菜单
            $menu = Menu::find()->andWhere(['plugin' => $item['name'], 'menu_type' => 'C'])->orderBy('order_num asc')->select('path')->scalar();
            $item['path'] = $menu;
        }

        unset($item);

        $newList = [];
        /**
         * @var MallPlugin[] $list
         */
        $group1 = ['group_name' => '分润类', 'description' => '增进代理商积极性', 'list' => [], 'plugin_pic' => ServerHelper::getHost() . '/web/assets/icons/plugin_bg1.png'];
        $group2 = ['group_name' => '营销类', 'description' => '促进用户二次复购', 'list' => [], 'plugin_pic' => ServerHelper::getHost() . '/web/assets/icons/plugin_bg1.png'];
        $group3 = ['group_name' => '工具类', 'description' => '高效管理商城业务', 'list' => [], 'plugin_pic' => ServerHelper::getHost() . '/web/assets/icons/plugin_bg1.png'];

        foreach ($list as $item) {
            $item['status'] = 1;
            if ($item['type'] == 0) {
                $group1['list'][] = $item;
            }

            if ($item['type'] == 1) {
                $group2['list'][] = $item;
            }
            if ($item['type'] == 2) {
                $group3['list'][] = $item;
            }
        }
        $newList[] = $group1;
        $newList[] = $group2;
        $newList[] = $group3;
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $newList]);
    }
}
