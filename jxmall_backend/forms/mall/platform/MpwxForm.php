<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-14
 * Time: 9:45
 */

namespace app\forms\mall\platform;


use app\core\ApiCode;
use app\helpers\ConstantHelper;
use app\helpers\FileHelper;
use app\helpers\HttpHelper;
use app\helpers\OptionHelper;
use app\helpers\ResponseHelper;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use yii\helpers\Json;


class MpwxForm extends BaseModel
{
    public $appid;
    public $secret;
    public $name;
    public $upload_key;
    public $desc;
    public $version;


    public function rules()
    {
        return [
            [['upload_key', 'version', 'desc'], 'string'],
            [['appid'], 'string', 'max' => 64],
            [['secret'], 'string', 'max' => 255],
            [['name'], 'string', 'max' => 45],

        ]; // TODO: Change the autogenerated stub
    }

    public function save()
    {

        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        if (!$this->appid || !$this->secret || !$this->name) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '请完善必填信息');
        }
        OptionHelper::set('platform_mpwx', $this->attributes, \Yii::$app->mall->id);
        if($this->appid){
            OptionHelper::set($this->appid, ['platform' =>ConstantHelper::PLATFORM_MPWX,'mall_id'=>$this->mall_id], \Yii::$app->mall->id);
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '保存成功');
    }


    public function search()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $mpwx = OptionHelper::get('platform_mpwx', \Yii::$app->mall->id);
        if (!$mpwx) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '未配置小程序');
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['mpwx' => $mpwx]);
    }

    public function saveSettingByMallId($mall_id)
    {
        if (!$this->validate()) {
            return false;
        }
        return OptionHelper::set('platform_mpwx', $this->attributes, $mall_id);
    }

    /**
     * Created by PhpStorm.
     * User：ganxi
     * Date：2022/4/30
     * Time：9:26
     * Note：上传代码
     */
    public function upload()
    {

        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $appid = $this->appid;
        $standard_path = \Yii::getAlias('@webroot') . '/mini_path/standard';

        if (!$this->upload_key) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '上传密钥不正确!');
        }
        if (!is_dir($standard_path)) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '小程序代码不存在！');
        }

        if (!$this->version) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '请输入版本号');
        }
        if (!$this->desc) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '请输入描述信息');
        }
        if (!file_exists($standard_path . '/project.config.json')) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '文件不完整!');
        }
        if (!file_exists($standard_path . '/version')) {
            return ResponseHelper::send(ApiCode::CODE_FAIL, '文件不完整！');
        }
        $path = \Yii::getAlias('@webroot') . '/mini_path/' . $appid;
        FileHelper::unlink($path);
        FileHelper::copyDirectory($standard_path, $path);
        file_put_contents($path . "/private.{$appid}.key", $this->upload_key);
        $url = \Yii::$app->request->hostName;
        $info = Json::encode([
            "mall_id" => $this->mall_id,
            "uniacid" => $this->mall_id,
            "acid" => $this->mall_id,
            "multiid" => "0",
            "version" => file_get_contents($standard_path . '/version'),
            "siteroot" => "https://{$url}/web/mpwx-verify.php?r=",
            "design_method" => "3"
        ]);
        $data = "var siteinfo = {$info};module.exports = siteinfo";
        file_put_contents($path . '/siteinfo.js', $data);
        $config = file_get_contents($path . '/project.config.json');
        file_put_contents($path . '/project.config.json', str_replace('app_value', $this->appid, $config));
        $res = HttpHelper::get('http://localhost:8899/upload', ['appid' => $appid, 'key_path' => $path . "/private.{$appid}.key", 'path' => $path, 'version' => $this->version, 'desc' => $this->desc], []);
        return $res;
        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '上传成功');
    }


}
