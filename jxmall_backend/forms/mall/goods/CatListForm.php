<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-09-27
 * Time: 10:20
 */

namespace app\forms\mall\goods;


use app\core\ApiCode;
use app\models\BaseModel;
use app\models\Cat;
use app\models\Goods;

class CatListForm extends BaseModel
{
    public $page;
    public $limit;
    public $status;
    public $keyword;
    public $mch_id;
    public $type;
    public $parent_cat_id;

    public function rules()
    {
        return [
            [['page', 'limit', 'status', 'mch_id', 'type', 'parent_cat_id'], 'integer'],
            [['keyword'], 'string'],
            [['limit'], 'default', 'value' => 10]
        ]; // TODO: Change the autogenerated stub
    }

    public function getList()
    {

        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $query = Cat::find()
            ->where(['mall_id' => \Yii::$app->mall->id, 'is_delete' => 0]);
        if ($this->keyword) {
            $query->andWhere(['like', 'name', $this->keyword]);
        }
        if ($this->mch_id) {
            $query->andWhere(['mch_id' => $this->mch_id]);
        }
        $list = $query->orderBy('created_at DESC')->page($pagination, $this->limit, $this->page)->asArray()->all();
        foreach ($list as &$item) {

            $parent = Cat::getOne($item['parent_id']);
            $item['parent_name'] ='无上级分类';
            if ($parent) {
                $item['parent_name'] = $parent->name;
            }
        }
        unset($item);

        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list, 'pagination' => $pagination]);
    }


    public function query()
    {

        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }

        $query = Cat::find()
            ->where(['mall_id' => \Yii::$app->mall->id, 'is_delete' => 0]);
        if ($this->mch_id) {
            $query->andWhere(['mch_id' => $this->mch_id]);
        }
        if ($this->keyword) {
            $query->andWhere(['like', 'name', $this->keyword]);
        }
        $list = $query->orderBy('created_at DESC')->asArray()->all();
        foreach ($list as &$item) {
            $exist = Cat::find()->where(['is_delete' => 0, 'parent_id' => $item['id']])->exists();
            $item['is_child'] = $exist;
        }
        unset($item);

        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list]);
    }
}