<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-09-27
 * Time: 10:20
 */

namespace app\forms\mall\goods;


use app\core\ApiCode;
use app\helpers\SerializeHelper;
use app\models\AttrGroup;
use app\models\BaseModel;
use app\models\Cat;
use app\models\CommonOrderDetail;
use app\models\Goods;
use app\models\GoodsAttr;
use app\models\GoodsCat;
use function foo\func;

class GoodsListForm extends BaseModel
{
    public $page;
    public $limit;
    public $status;
    public $keyword;
    public $search_date;

    public function rules()
    {
        return [
            [['page', 'limit', 'status'], 'integer'],
            [['keyword'], 'string'],
            [['search_date'], 'safe'],
            [['limit'], 'default', 'value' => 10]
        ]; // TODO: Change the autogenerated stub
    }


    public function getList()
    {

        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $query = Goods::find()
            ->where(['mall_id' => \Yii::$app->mall->id, 'is_delete' => 0]);
        if ($this->status == 0) {
            $query->andWhere(['status' => 0]);
        }
        if ($this->status == 1) {
            $query->andWhere(['status' => 1]);
        }
        if ($this->keyword) {
            $query->andWhere(['like', 'name', $this->keyword]);
        }
        if ($this->search_date && count($this->search_date)) {
            $start_date = strtotime($this->search_date[0]);
            $end_date = strtotime($this->search_date[1]);
            $query->andWhere(['>', 'created_at', $start_date])->andWhere(['<', 'created_at', $end_date]);
        }
        $list = $query->page($pagination, $this->limit, $this->page)->orderBy('created_at DESC')->asArray()->all();


        foreach ($list as &$item) {
            $cat = Cat::find()
                ->alias('c')
                ->leftJoin(['gc' => GoodsCat::tableName()], 'gc.cat_id=c.id')
                ->andWhere(['gc.goods_id' => $item['id'], 'c.is_delete' => 0])
                ->select('c.name')
                ->orderBy('gc.level desc')
                ->asArray()
                ->one();
            $item['cat_name'] = $cat['name'];
            //$item['sales']=CommonOrderDetail::find()->andWhere(['goods_id'=>$item['id'],'is_delete'=>0])->andWhere(['status'=>[0,1]])->sum('num');
            $attr_group_list = AttrGroup::find()
                ->where(['goods_id' => $item['id'], 'is_delete' => 0])
                ->orderBy('attr_group_id ASC')
                ->select('attr_group_id,attr_group_name,attr_list')
                ->asArray()
                ->all();


            if ($item['is_attr']) {
                /**
                 * @var AttrGroup $attr_group_list []
                 */
                foreach ($attr_group_list as &$group) {
                    $group['attr_list'] = SerializeHelper::decode($group['attr_list']);
                }
                unset($group);
                $item['attr_group_list'] = $attr_group_list ?? [];

                $attr_list = GoodsAttr::find()->where(['goods_id' => $item['id'], 'is_delete' => 0])->asArray()->all();
                foreach ($attr_list as &$attr) {
                    $attr['attr_list'] = SerializeHelper::decode($attr['attr_list']);
                }
                unset($attr);
                $item['attr_list'] = $attr_list;
            } else {
                $item['attr_list'] = [];
            }
        }
        unset($item);
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['list' => $list, 'pagination' => $pagination]);

    }
}