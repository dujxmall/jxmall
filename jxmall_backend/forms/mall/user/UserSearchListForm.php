<?php
/**
 * Created by PhpStorm.
 * User: ganxi
 * Date: 2022/3/12
 * Time: 20:55
 * Note:
 */

namespace app\forms\mall\user;


use app\core\ApiCode;
use app\helpers\ResponseHelper;
use app\models\BaseModel;
use app\models\User;

class UserSearchListForm extends BaseModel
{
    public $user_id;
    public $keyword;
    public $search_date;
    public $month;
    public $day;
    public $year;
    public $sign_time;
    public $level_id;
    public $level;
    public $mobile;


    public function rules()
    {
        return [
            [['user_id', 'month', 'day', 'year', 'level_id', 'level'], 'integer'],
            [['keyword', 'mobile'], 'string'],
            [['search_date', 'sign_time'], 'safe']
        ]; // TODO: Change the autogenerated stub
    }


    public function getList()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }

        $query = User::find();
        if ($this->keyword) {
            $query->andWhere(['like', 'nickname', $this->keyword]);
        }
        if ($this->user_id) {
            $query->andWhere(['id' => $this->user_id]);
        }
        $query->andFilterWhere(['month' => $this->month, 'day' => $this->day, 'year' => $this->year]);
        if ($this->search_date && is_array($this->search_date)) {
            $query->andWhere(['between', 'birthday', $this->search_date[0], $this->search_date[1]]);
        }

        if ($this->sign_time && is_array($this->sign_time)) {
            $query->andWhere(['between', 'create_time', $this->sign_time[0], $this->sign_time[1]]);
        }

        if ($this->mobile) {
            $query->andWhere(['like', 'mobile', $this->mobile]);
        }

        if ($this->level) {
            $query->andWhere(['level' => $this->level]);
        }

        if ($this->level_id) {
            $query->andWhere(['level_id' => $this->level_id]);
        }
        $list = $query->select('id,nickname,avatar_url,birthday,level,level_id,mobile')->orderBy('id desc')->asArray()->all();

        return ResponseHelper::send(ApiCode::CODE_SUCCESS, '', ['list' => $list]);
    }

}