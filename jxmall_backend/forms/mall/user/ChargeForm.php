<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-18
 * Time: 21:49
 */

namespace app\forms\mall\user;


use app\core\ApiCode;
use app\helpers\BalanceLogHelper;
use app\helpers\IntegralLogHelper;
use app\helpers\ResponseHelper;
use app\models\BalanceLog;
use app\models\BaseModel;
use app\models\ChargeLog;
use app\models\IntegralLog;
use app\models\User;
use yii\base\Exception;

class ChargeForm extends BaseModel
{
    public $num;
    public $type;// 充值类型  0 余额 1 积分
    public $way;//充值方式  0 增加 1 减少
    public $remarks;
    public $user_id;

    public function rules()
    {
        return [
            [['user_id', 'type', 'way'], 'integer'],
            [['num'], 'number'],
            [['remarks'], 'string'],

        ]; // TODO: Change the autogenerated stub
    }

    public function save()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }

        $t = \Yii::$app->db->beginTransaction();
        $user = User::getUser($this->user_id);

        if (!$user) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '用户不存在！');
        }
        $log = new ChargeLog();
        $log->mall_id = \Yii::$app->mall->id;
        $log->admin_id = \Yii::$app->admin->identity->id;
        $log->remarks = $this->remarks;
        $log->num = $this->num;
        $log->user_id = $this->user_id;
        if ($this->type == 0) {
            $log->type = 0;
            $log->before_num = $user->money;
            if ($this->way == 1) {
                try {
                    BalanceLogHelper::sub($this->user_id, $this->num, $this->remarks ? $this->remarks : '后台扣除');
                } catch (Exception $e) {
                    $t->rollBack();
                    return ResponseHelper::send(ApiCode::CODE_FAIL, $e->getMessage());
                }
            }
            if ($this->way == 0) {
                BalanceLogHelper::add($this->user_id, $this->num, $this->remarks ? $this->remarks : '后台充值');
            }
            $log->after_num = $user->money;
        }

        if ($this->type == 1) {
            $log->type = 1;
            $log->before_num = $user->integral;
            if ($this->way == 1) {
                try {
                    IntegralLogHelper::sub($user->id, $this->num, $this->remarks ? $this->remarks : '后台扣除');
                } catch (Exception $e) {
                    $t->rollBack();
                    return ResponseHelper::send(ApiCode::CODE_FAIL, $e->getMessage());
                }
            }
            if ($this->way == 0) {
                IntegralLogHelper::add($user->id, $this->num, $this->remarks ? $this->remarks : '后台充值');
            }
            $log->after_num = $user->integral;
        }
        if (!$log->save()) {
            $t->rollBack();
            return $this->responseErrorMsg($log);
        }
        $t->commit();
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '操作成功');
    }

}
