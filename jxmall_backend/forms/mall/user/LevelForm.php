<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-18
 * Time: 14:42
 */

namespace app\forms\mall\user;


use app\core\ApiCode;
use app\helpers\OptionHelper;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\Level;
use app\models\User;

class LevelForm extends BaseModel
{

    public $id;
    public $name;
    public $level;
    public $pic_url;
    public $detail;
    public $enabled;
    public $upgrade;
    public $is_auto;
    public $is_discount;
    public $discount;
    public $money;
    public $buy_type;
    public $is_inviter;
    public $is_contract_update;
    public $contract_tpl_id;


    public function rules()
    {
        return [
            [['id', 'level', 'enabled', 'is_auto', 'is_discount', 'buy_type', 'is_inviter','is_contract_update'], 'integer'],
            [['pic_url', 'detail'], 'string', 'max' => 255],
            [['name','contract_tpl_id'], 'string'],
            [['money'], 'number'],
            [['upgrade'], 'string'],
            [['discount'], 'number', 'max' => 10]
        ]; // TODO: Change the autogenerated stub
    }

    public function save()
    {
        if (!$this->validate()) {

            return $this->responseErrorInfo();
        }

        if ($this->id) {
            $level = Level::findOne(['id' => $this->id, 'is_delete' => 0, 'mall_id' => \Yii::$app->mall->id]);
            if (!$level) {
                return $this->apiResponse(ApiCode::CODE_FAIL, '等级不存在!');
            }
            if ($level->level != $this->level) {
                $user = User::findOne(['mall_id' => \Yii::$app->mall->id, 'level' => $level, 'is_delete' => 0]);
                if ($user) {
                    return $this->apiResponse(ApiCode::CODE_FAIL, '该等级存在对应用户，不可变更等级!');
                }
            }

        } else {
            $level = new Level();
            $level->mall_id = \Yii::$app->mall->id;
            $is_exist = Level::findOne(['level' => $this->level, 'is_delete' => 0, 'mall_id' => \Yii::$app->mall->id]);
            if ($is_exist) {
                return $this->apiResponse(ApiCode::CODE_FAIL, '等级已存在');
            }
        }
        $level->attributes = $this->attributes;
        if (!$this->discount) {
            $level->discount = 0;
            $level->is_discount = 0;

        }

        if (!$level->save()) {
            return $this->responseErrorMsg($level);
        }
        OptionHelper::set('level_upgrade_' . $level->id, SerializeHelper::decode($this->upgrade), $level->mall_id);
        OptionHelper::set('level_' . $level->id, $level->attributes, $level->mall_id);

        return $this->apiResponse(ApiCode::CODE_SUCCESS, '保存成功');
    }

    public function search()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $level = Level::findOne(['id' => $this->id, 'is_delete' => 0, 'mall_id' => \Yii::$app->mall->id]);
        if (!$level) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '等级不存在!');
        }
        $info = $level->attributes;
        $info['upgrade'] = OptionHelper::get('level_upgrade_' . $level->id, $level->mall_id);
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['level' => $info]);
    }

    public function delete()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $level = Level::findOne(['id' => $this->id, 'is_delete' => 0, 'mall_id' => \Yii::$app->mall->id]);
        if (!$level) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '等级不存在!');
        }
        $user = User::findOne(['mall_id' => \Yii::$app->mall->id, 'level' => $level->level, 'is_delete' => 0]);
        if ($user) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '该等级存在对应用户，不可删除!');
        }
        $level->is_delete = 1;
        $level->save();
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '删除成功');
    }
}