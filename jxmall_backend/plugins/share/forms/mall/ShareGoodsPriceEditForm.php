<?php
/**
 * @link:http://www.dujxmall.com/
 * @copyright: Copyright (c) 2020 广州动力宇宙信息科技
 * Created by PhpStorm
 * Author: ganxiaohao
 * Date: 2020-10-31
 * Time: 9:39
 */

namespace app\plugins\share\forms\mall;

use app\core\ApiCode;
use app\helpers\OptionHelper;
use app\helpers\SerializeHelper;
use app\models\BaseModel;
use app\models\Goods;
use app\models\GoodsInfo;
use app\plugins\share\models\ShareGoods;
use app\plugins\share\models\ShareLevel;


/**
 * Class PointGoodsPriceEditForm
 * @package app\plugins\share\forms\mall
 * @Notes佣金设置
 */
class ShareGoodsPriceEditForm extends BaseModel
{
    public $id;
    public $is_alone;
    public $is_share_goods;
    public $price_type;
    public $price_list;

    public function rules()
    {
        return [
            [['id'], 'required'],
            [['id', 'is_alone', 'is_share_goods', 'price_type'], 'integer'],
            [['price_list'], 'safe'],
        ]; // TODO: Change the autogenerated stub
    }


    public function save()
    {
        if (!$this->validate()) {
            return $this->responseErrorInfo();
        }
        $shareGoods = ShareGoods::findOne(['id' => $this->id, 'mall_id' => \Yii::$app->mall->id]);
        if (!$shareGoods) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '分销商品不存在！');
        }
        $goods = Goods::findOne(['is_delete' => 0, 'id' => $shareGoods->goods_id]);
        if (!$goods) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '商品不存在或已被删除!');
        }
        $shareGoods->is_alone = $this->is_alone;
        $shareGoods->is_share_goods = $this->is_share_goods;
        $shareGoods->price_type = $this->price_type;
        if (!$shareGoods->save()) {
            return $this->responseErrorMsg($shareGoods);
        }
        if ($this->is_alone) {
            OptionHelper::set('goods_share_price_' . $this->id, $this->price_list, \Yii::$app->mall->id);
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '保存成功');
    }



    /**
     * @Author: 动力宇宙 ganxiaohao
     * @Date: 2020-10-31
     * @Time: 9:41
     * @Note:
     * @return array
     */
    public function search()
    {
        $info = [];

        $shareGoods = ShareGoods::findOne(['id' => $this->id, 'mall_id' => \Yii::$app->mall->id]);
        if (!$shareGoods) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '分销商品不存在！');
        }
        $info['id'] = $this->id; //这里是分销商品的id
        $info['is_alone'] = $shareGoods->is_alone;
        $info['is_share_goods'] = $shareGoods->is_share_goods;
        $goods = Goods::findOne(['is_delete' => 0, 'id' => $shareGoods->goods_id]);
        if (!$goods) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '商品不存在或已被删除!');
        }
        $info['name'] = $goods->name;
        $info['cost_price'] = $goods->cost_price;
        $info['origin_price'] = $goods->origin_price;
        $info['price'] = $goods->price;
        $info['cover_pic'] = $goods->cover_pic;
        $info['price_type'] = $shareGoods->price_type;
        $goodsInfo = GoodsInfo::findOne(['is_delete' => 0, 'goods_id' => $goods->id, 'mall_id' => \Yii::$app->mall->id]);
        $info['pic_list'] = [];
        if ($goodsInfo) {
            if ($goodsInfo->pic_list) {
                $info['pic_list'] = SerializeHelper::decode($goodsInfo->pic_list);
            }
        }
        $info['cat_list'] = $goods->getCatList();
        $level_list = ShareLevel::find()->where(['mall_id' => \Yii::$app->mall->id, 'is_delete' => 0])->orderBy('level asc')->asArray()->all();
        $share_setting = OptionHelper::get('share_setting', \Yii::$app->mall->id);
        $price_list = [];
        if ($share_setting) {
            $goods_share_price_list = OptionHelper::get('goods_share_price_' . $this->id, \Yii::$app->mall->id);
            if (!$goods_share_price_list) {
                $price_list = [];
                foreach ($level_list as $item) {
                    $newItem['level'] = $item['level'];
                    $newItem['level_name'] = $item['name'];
                    $newItem['first_price'] = 0;
                    $newItem['second_price'] = 0;
                    $newItem['third_price'] = 0;
                    $price_list[] = $newItem;
                }
            } else {
                $price_list = [];
                foreach ($level_list as $item) {
                    $flag = false;
                    $isItem = [];
                    foreach ($goods_share_price_list as $item1) {
                        if ($item1['level'] == $item['level']) {
                            $flag = true;
                            $isItem = $item1;
                            break 1;
                        }
                    }
                    if ($flag) {
                        $price_list[] = $isItem;
                    } else {
                        $newItem['level'] = $item['level'];
                        $newItem['level_name'] = $item['name'];
                        $newItem['first_price'] = 0;
                        $newItem['second_price'] = 0;
                        $newItem['third_price'] = 0;
                        $price_list[] = $newItem;
                    }
                }
            }
        }
        $info['share_level'] = $share_setting['level'];
        if ($share_setting['level'] == 0) {
            return $this->apiResponse(ApiCode::CODE_FAIL, '系统未开启分销');
        }
        return $this->apiResponse(ApiCode::CODE_SUCCESS, '', ['info' => $info, 'price_list' => $price_list]);
    }




}