<?php

namespace app\models;

use app\events\CommonOrderEvent;
use app\helpers\JobHelper;
use app\jobs\user\CheckInviterJob;
use app\jobs\user\UserLevelUpgradeJob;
use Yii;

/**
 * This is the model class for table "{{%common_order}}".
 *
 * @property int $id
 * @property int $mall_id
 * @property int $order_id
 * @property int $is_pay
 * @property int|null $pay_time
 * @property int $is_delete
 * @property int|null $deleted_at
 * @property int|null $updated_at
 * @property int|null $created_at
 * @property int $status  1 订单已完成 2 无效
 * @property string $order_type mall 商城订单
 * @property int $mch_id
 * @property int $user_id
 * @property string $order_no 订单编号
 * @property string|null $order_class 订单对应的class
 * @property float $pay_price
 * @property float $total_price
 * @property int $pay_type 0、微信支付 1余e
 * @property string|null $union_no
 * @property string $platform
 * @property string $refund_no
 * @property float $income
 * @property integer $level_id
 * @property integer $level
 */
class CommonOrder extends BaseActiveRecord
{
    const TYPE_MALL = 'mall';
    const STATUS_INVALID = 2;
    const STATUS_VALID = 1;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%common_order}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['mall_id', 'order_id', 'user_id', 'order_no'], 'required'],
            [['mall_id', 'level_id', 'level', 'order_id', 'is_pay', 'pay_time', 'is_delete', 'deleted_at', 'updated_at', 'created_at', 'status', 'mch_id', 'user_id', 'pay_type'], 'integer'],
            [['pay_price', 'total_price', 'income'], 'number'],
            [['platform'], 'string', 'max' => 10],
            [['order_no', 'union_no', 'refund_no', 'order_type'], 'string', 'max' => 45],
            [['order_class'], 'string', 'max' => 128],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'mall_id' => 'Mall ID',
            'order_id' => 'Order ID',
            'is_pay' => 'Is Pay',
            'pay_time' => 'Pay Time',
            'is_delete' => 'Is Delete',
            'deleted_at' => 'Deleted At',
            'updated_at' => 'Updated At',
            'created_at' => 'Created At',
            'status' => ' 1 订单已完成 2 无效',
            'order_type' => 'mall 商城订单',
            'mch_id' => 'Mch ID',
            'user_id' => 'User ID',
            'order_no' => '订单编号',
            'order_class' => '订单对应的class',
            'pay_price' => 'Pay Price',
            'total_price' => 'Total Price',
            'pay_type' => '0、微信支付 1余e',
            'union_no' => '合并订单ID',
            'platform' => '平台',
            'refund_no' => '商户退款单号',
            'income' => '实际收益',
            'level_id' => 'level_id',
            'level' => 'level'
        ];
    }

    public static function generateOrderNo($user_id)
    {
        return 'C' . date('YmdHis', time()) . $user_id;
    }

    public static function generateRefundNo($user_id)
    {
        return 'R' . date('YmdHis', time()) . $user_id;
    }

    public function beforeSave($insert)
    {
        $user = User::getOne($this->user_id);
        if ($user) {
            $this->level = $user->level;
            $this->level_id = $user->level_id;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function valid()
    {
        $this->save();
        $event = new CommonOrderEvent();
        $event->id = $this->id;
        Yii::$app->trigger(CommonOrderEvent::COMMON_ORDER_STATUS_CHANGE, $event);
    }

    public function invalid()
    {
        $this->save();
        $event = new CommonOrderEvent();
        $event->id = $this->id;
        Yii::$app->trigger(CommonOrderEvent::COMMON_ORDER_STATUS_CHANGE, $event);
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($insert) {
            $event = new CommonOrderEvent();
            $event->id = $this->id;
            Yii::$app->trigger(CommonOrderEvent::COMMON_ORDER_CREATED, $event);
        } else {
            if (isset($changedAttributes['is_pay'])) {
                $event = new CommonOrderEvent();
                $event->id = $this->id;
                Yii::$app->trigger(CommonOrderEvent::COMMON_ORDER_PAY, $event);

                JobHelper::push(new UserLevelUpgradeJob(['user_id' => $this->user_id]), 1);
                JobHelper::push(new CheckInviterJob(['user_id' => $this->user_id]), 1);
            }
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
